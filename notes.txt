Progress Tracking Brainstorm:
1. User level:
    - Total points accumulated
    - Total tasks completed (subtrack negatives)
    - Avg points accumulated per day/week/month
    - Avg tasks completed per day/week/month (subtrack negatives)

2. Category level:
    - Total points accumulated
    - Total tasks completed (subtrack negatives)
    - Avg points accumulated per day/week/month
    - Avg tasks completed per day/week/month (subtrack negatives)
    - Duration accumulated
    - Quantity achieved

Visualizations:
1. Line chart:
    - Points earned over time
    - Points increase rate over time? (derivative, consider performance)
    - Tasks done over time
    - Task increase rate over time? (derivative)
    - Allow adjustable time
    - Allow filtering subcategories (like checkbox)

2. Pie Chart:
    - shows ratio of categories/subcategories
    - Potential filtering:
        - checkbox each desired subcategory
    - Drill-down pie chart. Zoom into categories.

Goals feature:
    - separate entity
    - references a category
    - title
    - Optionals: desc, metric, quantity, duration
    - list goals for certain categories
    - potentially add progress bar

Points Logic:
- User entity holds total points earned, but it depends on its categories.
- The concern is, how do we deal with points updates? Points can be updated/edited at task level or even category level.
- When users change how much points a category is worth, does that change the whole history or just from that point on?
- In that case, the task itself does not hold any point logic. Only holds how much was done, and logic is based on category.
- Is there an intuitive logic that will fit this point feature?

- Task:
    - replace points_earned with points_per_unit (which is snapshotted from Category)

- Category:
    - add total_points
    - this sums all points through the tasks/categories

- User:
    - add total_points
    - this sums all points through the categories

- this design preserves history and allows flexible editing in the future.
- think of Category's points_per_unit as a default setter.